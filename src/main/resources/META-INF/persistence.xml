<persistence
        xmlns="http://java.sun.com/xml/ns/persistence"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://java.sun.com/xml/ns/persistence
        http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"
        version="2.0">

    <persistence-unit name="mysql">

        <!--As JPA is only a specification, we need to indicate the vendor-specific Persistence Provider implementation of the API.-->
        <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>
        
        <properties>
            <property name="javax.persistence.jdbc.driver" value="com.mysql.cj.jdbc.Driver"/>
            <property name="javax.persistence.jdbc.url" value="jdbc:mysql://localhost:3306/CH02"/>
            <property name="javax.persistence.jdbc.user" value="hamednp"/>
            <property name="javax.persistence.jdbc.password" value="interface"/>

            <property name="hibernate.dialect" value="org.hibernate.dialect.MySQL8Dialect"/>
            <property name="hibernate.show_sql" value="true"/>

            <!--Hibernate will format the SQL nicely and generate comments in the SQL string so we know why Hibernate executed the SQL statement.-->
            <property name="hibernate.format_sql" value="true"/>

            <!--Every time the program is executed, the database will be created from scratch. This is ideal for automated testing, when we want to work with a clean database for every test run.-->
<!--            <property name="hibernate.hbm2ddl.auto" value=""/>-->
        </properties>
    </persistence-unit>

</persistence>